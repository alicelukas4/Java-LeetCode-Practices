import java.util.ArrayList;
import java.util.Arrays;

/*
 * Given an array S of n integers, are there elements a, b, c, and d in S 
 * such that a + b + c + d = target? 
 * Find all unique quadruplets in the array which gives the sum of target.

Note: The solution set must not contain duplicate quadruplets.
For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.
A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]
 */
public class FourSum {
	public FourSum(int[] array, int target)
	{
		ArrayList <String>rec = new ArrayList<String>();
		Arrays.sort(array); //s -2 -1 0 0 1 2
		for(int i = 0; i< array.length-2; i++)
		{
			int indexLeft = i+1; 
			int indexRight = array.length-1;
			int indexMiddle = array.length-2; 
			
			if(array[i]+array[indexLeft]+array[indexMiddle]+array[indexRight] == target)
			{
				rec.add(array[i]+" "+array[indexLeft]+" "+array[indexMiddle]+" "+array[indexRight]); 
				System.out.println(array[i]+" "+array[indexLeft]+" "+array[indexMiddle]+" "+array[indexRight]);
			}
			else if (array[i]+array[indexLeft]+array[indexMiddle]+array[indexRight] > target)
			{
				
			}
			else if (array[i]+array[indexLeft]+array[indexMiddle]+array[indexRight] < target)
			{
				
			}
		}
	}

	public static void main(String[] args) 
	{
		int[] s = {1, 0, -1, 0, -2, 2};
		int target = 0; 
		
		FourSum sum = new FourSum(s, target); 
	}
}
